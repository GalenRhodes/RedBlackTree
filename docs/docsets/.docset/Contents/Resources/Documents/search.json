{"Extensions/Dictionary.html#/s:SD12RedBlackTreeSLRzrlE14treeDictionaryAA0cE0Cyxq_GyFZ":{"name":"treeDictionary()","abstract":"<p>Create a new, empty binary tree dictionary.</p>","parent_name":"Dictionary"},"Extensions/Dictionary.html#/s:SD12RedBlackTreeSLRzrlE14treeDictionaryAbA0cE0Cyxq_GAE_tFZ":{"name":"treeDictionary(treeDictionary:)","abstract":"<p>Create a new binary tree dictionary with all the elements from this dictionary. It does not create a copy","parent_name":"Dictionary"},"Extensions/Dictionary.html#/s:SD12RedBlackTreeSLRzrlE14treeDictionary17dictionaryLiteralAA0cE0Cyxq_Gx_q_td_tFZ":{"name":"treeDictionary(dictionaryLiteral:)","abstract":"<p>Create a new binary tree dictionary with the elements given.</p>","parent_name":"Dictionary"},"Extensions/Dictionary.html#/s:SD12RedBlackTreeSLRzrlE14treeDictionary10dictionaryAA0cE0Cyxq_GSDyxq_G_tFZ":{"name":"treeDictionary(dictionary:)","abstract":"<p>Create a new binary tree dictionary with the elements from the given hashable dictionary.</p>","parent_name":"Dictionary"},"Extensions/Dictionary.html#/s:SD12RedBlackTreeSLRzrlE14treeDictionarySDyxq_GAA0cE0Cyxq_G_tcfc":{"name":"init(treeDictionary:)","abstract":"<p>Create a Swift Hashable Dictionary from a Binary Tree Dictionary.</p>","parent_name":"Dictionary"},"Extensions/Dictionary.html":{"name":"Dictionary"},"Classes/TreeDictionary/Index.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"Index"},"Classes/TreeDictionary/Index.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Index"},"Classes/TreeDictionary/Index.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"Index"},"Classes/TreeDictionary/Element.html":{"name":"Element","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:Sl10startIndex0B0Qzvp":{"name":"startIndex","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:Sl8endIndex0B0Qzvp":{"name":"endIndex","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:Sl7isEmptySbvp":{"name":"isEmpty","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:Sl5countSivp":{"name":"count","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:12RedBlackTree0C10DictionaryCACyxq_Gycfc":{"name":"init()","abstract":"<p>Create a new, empty binary tree dictionary.</p>","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:12RedBlackTree0C10DictionaryC04treeD0ACyxq_GAE_tcfc":{"name":"init(treeDictionary:)","abstract":"<p>Create a new binary tree dictionary with all the elements from this dictionary. It does not create a copy","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:12RedBlackTree0C10DictionaryC10dictionaryACyxq_GSDyxq_G_tcSHRzrlufc":{"name":"init(dictionary:)","abstract":"<p>Create a new binary tree dictionary with the elements from the given hashable dictionary.</p>","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:12RedBlackTree0C10DictionaryC17dictionaryLiteralACyxq_Gx_q_td_tcfc":{"name":"init(dictionaryLiteral:)","abstract":"<p>Create a new binary tree dictionary with the elements given.</p>","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:12RedBlackTree0C10DictionaryC8elementsACyxq_GSayx_q_tG_tcfc":{"name":"init(elements:)","abstract":"<p>Create a new binary tree dictionary with the elements given.</p>","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:12RedBlackTree0C10DictionaryCyx3key_q_5valuetAC5IndexVyxq__Gcip":{"name":"subscript(_:)","abstract":"<p>Accesses the key-value pair at the specified position.</p>","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:SK8distance4from2toSi5IndexQz_AEtF":{"name":"distance(from:to:)","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:SK5index5after5IndexQzAD_tF":{"name":"index(after:)","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:SK5index6before5IndexQzAD_tF":{"name":"index(before:)","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:12RedBlackTree0C10DictionaryCyq_Sgxcip":{"name":"subscript(_:)","abstract":"<p>Accesses the value associated with the given key for reading and writing.</p>","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:12RedBlackTree0C10DictionaryC_7defaultq_x_q_yXKtcip":{"name":"subscript(_:default:)","abstract":"<p>Accesses the value with the given key, falling back to the given default value if the key isnâ€™t found.</p>","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:12RedBlackTree0C10DictionaryC9mapValuesySDyxqd__Gqd__q_KXEKSHRzlF":{"name":"mapValues(_:)","abstract":"<p>Returns a new dictionary containing the keys of this dictionary with the values transformed by the given","parent_name":"TreeDictionary"},"Classes/TreeDictionary/Index.html":{"name":"Index","abstract":"<p>The position of a key-value pair in a dictionary.</p>","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"TreeDictionary"},"Classes/TreeDictionary.html":{"name":"TreeDictionary"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"}}